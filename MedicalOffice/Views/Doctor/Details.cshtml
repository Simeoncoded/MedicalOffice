@model MedicalOffice.Models.Doctor

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.FirstName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.MiddleName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.MiddleName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DoctorSpecialties)
        </dt>
        <dd class="col-sm-10">
            @{
                int specCount = Model.DoctorSpecialties.Count;
                if (specCount > 0)
                {
                    string firstSpec = Model.DoctorSpecialties.FirstOrDefault().Specialty.SpecialtyName;
                    if (specCount > 1)
                    {
                        string specList = "";//Html string of specialty names separated by <br /> tags
                        var s = Model.DoctorSpecialties.ToList();
                        for (int i = 1; i < specCount; i++)//Skip the first because we have it already
                        {
                            specList += s[i].Specialty.SpecialtyName + " <br />";
                        }
                        <a class="" role="button" data-bs-toggle="collapse" href="#collapseSpecalty@(Model.ID)"
                           aria-expanded="false" aria-controls="collapseSpecalty@(Model.ID)">
                            @firstSpec <span class="badge bg-info">@specCount</span>
                        </a>
                        <div class="collapse" id="collapseSpecalty@(Model.ID)">
                            @Html.Raw(specList)
                        </div>
                    }
                    else
                    {
                        @firstSpec
                    }
                }
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DoctorDocuments)
        </dt>
        <dd class="col-sm-10">
            @{
                int fileCount = Model.DoctorDocuments.Count;
                if (fileCount > 0)
                {
                    var firstFile = Model.DoctorDocuments.FirstOrDefault(); ;
                    if (fileCount > 1)
                    {
                        <a class="" role="button" data-bs-toggle="collapse" href="#collapseDocs@(Model.ID)"
                           aria-expanded="false" aria-controls="collapseDocs@(Model.ID)">
                            <span class="badge bg-info">@fileCount</span> Documents...
                        </a>
                        <div class="collapse" id="collapseDocs@(Model.ID)">
                            @{
                                foreach (var d in Model.DoctorDocuments)
                                {
                                    <a asp-action="Download" asp-route-id="@d.ID">@d.FileName</a> <br />
                                }
                            }
                        </div>
                    }
                    else
                    {
                        <a asp-action="Download" asp-route-id="@firstFile?.ID">@firstFile?.FileName</a>
                    }
                }
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Patients)
        </dt>
        <dd class="col-sm-10">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Patients.FirstOrDefault().Summary)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Patients.FirstOrDefault().Age)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Patients.FirstOrDefault().Phone)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Patients)
                    {
                        <tr>
                            <td>
                                <a asp-controller="Patient" asp-action="Details"
                                   asp-route-id="@item.ID">@Html.DisplayFor(modelItem => item.Summary)</a>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Age)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PhoneFormatted)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.ID">Edit</a> |
    <partial name="_BackToList" />
</div>
